{"ast":null,"code":"var _jsxFileName = \"/home/dev2/dev/game-server/react-box-margin/src/components/CenteredBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CoinToss = ({\n  setResult,\n  setSpinning\n}) => {\n  const tossCoin = () => {\n    setSpinning(true);\n    const totalRotations = 5; // Adjust the total number of rotations based on your preference\n    const rotationDuration = 1000; // Adjust the rotation duration based on your preference\n\n    // Randomly determine the result after the spinning animation completes\n    setTimeout(() => {\n      const randomResult = Math.random() < 0.5 ? 'Heads' : 'Tails';\n      setResult(randomResult);\n      setSpinning(false);\n    }, totalRotations * rotationDuration);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: tossCoin,\n      disabled: setSpinning,\n      children: \"Toss Coin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = CoinToss;\nconst CenteredBox = () => {\n  _s();\n  const [result, setResult] = useState(null);\n  const [spinning, setSpinning] = useState(false);\n  const boxStyle = {\n    // ... (unchanged)\n  };\n  const circleStyle = {\n    width: '200px',\n    height: '200px',\n    borderRadius: '50%',\n    backgroundColor: '#FFD700',\n    // You can change the color as needed\n    color: 'black',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    top: '40%',\n    left: '50%',\n    transform: `translate(-50%, -50%) rotate(${spinning ? '3600deg' : '0deg'})`,\n    // Rotate when spinning is true\n    transition: 'transform 5s ease-in-out' // CSS transition for spinning animation\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: boxStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Coin Toss\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Heads (or) Tails\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: circleStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CoinToss, {\n      setResult: setResult,\n      setSpinning: setSpinning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(CenteredBox, \"Jvvhdc4SKTiG3GWI7qE9AcfVgPs=\");\n_c2 = CenteredBox;\nexport default CenteredBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"CoinToss\");\n$RefreshReg$(_c2, \"CenteredBox\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CoinToss","setResult","setSpinning","tossCoin","totalRotations","rotationDuration","setTimeout","randomResult","Math","random","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","CenteredBox","_s","result","spinning","boxStyle","circleStyle","width","height","borderRadius","backgroundColor","color","display","alignItems","justifyContent","position","top","left","transform","transition","style","_c2","$RefreshReg$"],"sources":["/home/dev2/dev/game-server/react-box-margin/src/components/CenteredBox.js"],"sourcesContent":["import React, { useState } from 'react';\n\n\nconst CoinToss = ({ setResult, setSpinning }) => {\n  const tossCoin = () => {\n    setSpinning(true);\n\n    const totalRotations = 5; // Adjust the total number of rotations based on your preference\n    const rotationDuration = 1000; // Adjust the rotation duration based on your preference\n\n    // Randomly determine the result after the spinning animation completes\n    setTimeout(() => {\n      const randomResult = Math.random() < 0.5 ? 'Heads' : 'Tails';\n      setResult(randomResult);\n      setSpinning(false);\n    }, totalRotations * rotationDuration);\n  };\n\n  return (\n    <div>\n      <button onClick={tossCoin} disabled={setSpinning}>\n        Toss Coin\n      </button>\n    </div>\n  );\n};\n\n\n\n\nconst CenteredBox = () => {\n  const [result, setResult] = useState(null);\n  const [spinning, setSpinning] = useState(false);\n\n  const boxStyle = {\n    // ... (unchanged)\n  };\n\n  const circleStyle = {\n    width: '200px',\n    height: '200px',\n    borderRadius: '50%',\n    backgroundColor: '#FFD700', // You can change the color as needed\n    color: 'black',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    top: '40%',\n    left: '50%',\n    transform: `translate(-50%, -50%) rotate(${spinning ? '3600deg' : '0deg'})`, // Rotate when spinning is true\n    transition: 'transform 5s ease-in-out', // CSS transition for spinning animation\n  };\n\n  return (\n    <div style={boxStyle}>\n      <h1>Coin Toss</h1>\n      <p>Heads (or) Tails</p>\n      <div style={circleStyle}></div>\n      <CoinToss setResult={setResult} setSpinning={setSpinning} />\n    </div>\n  );\n};\n\nexport default CenteredBox;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAY,CAAC,KAAK;EAC/C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrBD,WAAW,CAAC,IAAI,CAAC;IAEjB,MAAME,cAAc,GAAG,CAAC,CAAC,CAAC;IAC1B,MAAMC,gBAAgB,GAAG,IAAI,CAAC,CAAC;;IAE/B;IACAC,UAAU,CAAC,MAAM;MACf,MAAMC,YAAY,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,OAAO,GAAG,OAAO;MAC5DR,SAAS,CAACM,YAAY,CAAC;MACvBL,WAAW,CAAC,KAAK,CAAC;IACpB,CAAC,EAAEE,cAAc,GAAGC,gBAAgB,CAAC;EACvC,CAAC;EAED,oBACEN,OAAA;IAAAW,QAAA,eACEX,OAAA;MAAQY,OAAO,EAAER,QAAS;MAACS,QAAQ,EAAEV,WAAY;MAAAQ,QAAA,EAAC;IAElD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACC,EAAA,GAtBIjB,QAAQ;AA2Bd,MAAMkB,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEnB,SAAS,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACwB,QAAQ,EAAEnB,WAAW,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMyB,QAAQ,GAAG;IACf;EAAA,CACD;EAED,MAAMC,WAAW,GAAG;IAClBC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE,OAAO;IACfC,YAAY,EAAE,KAAK;IACnBC,eAAe,EAAE,SAAS;IAAE;IAC5BC,KAAK,EAAE,OAAO;IACdC,OAAO,EAAE,MAAM;IACfC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,KAAK;IACVC,IAAI,EAAE,KAAK;IACXC,SAAS,EAAG,gCAA+Bd,QAAQ,GAAG,SAAS,GAAG,MAAO,GAAE;IAAE;IAC7Ee,UAAU,EAAE,0BAA0B,CAAE;EAC1C,CAAC;EAED,oBACErC,OAAA;IAAKsC,KAAK,EAAEf,QAAS;IAAAZ,QAAA,gBACnBX,OAAA;MAAAW,QAAA,EAAI;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBjB,OAAA;MAAAW,QAAA,EAAG;IAAgB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACvBjB,OAAA;MAAKsC,KAAK,EAAEd;IAAY;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC/BjB,OAAA,CAACC,QAAQ;MAACC,SAAS,EAAEA,SAAU;MAACC,WAAW,EAAEA;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEV,CAAC;AAACG,EAAA,CAhCID,WAAW;AAAAoB,GAAA,GAAXpB,WAAW;AAkCjB,eAAeA,WAAW;AAAC,IAAAD,EAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}